services:

  # configuramos el contenedor de la base de datos
  db:
    image: postgres:14
    restart: always
    shm_size: 128mb
    environment:
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_DB=${POSTGRES_DB}
    volumes:
      - ./database/init.sql:/docker-entrypoint-initdb.d/init.sql
      - db_data:/var/lib/postgresql/data
    ports:
      - "5432:5432"

  # configuramos el contenedor del cliente
  ukun-clientes:
    image: sandoretti/ukun-clientes
    ports:
      - "8081:8081"
    environment:
      - SPRING_DATASOURCE_URL=jdbc:postgresql://db:5432/${POSTGRES_DB}
      - SPRING_DATASOURCE_USERNAME=${POSTGRES_USER}
      - SPRING_DATASOURCE_PASSWORD=${POSTGRES_PASSWORD}
    volumes:
      - vol_resources:/opt/resources
    depends_on:
      - db

  # configuramos el contenedor del empleado
  ukun-empleados:
    image: sandoretti/ukun-empleados
    ports:
      - "8082:8082"
    environment:
      - SPRING_DATASOURCE_URL=jdbc:postgresql://db:5432/${POSTGRES_DB}
      - SPRING_DATASOURCE_USERNAME=${POSTGRES_USER}
      - SPRING_DATASOURCE_PASSWORD=${POSTGRES_PASSWORD}
    volumes:
      - vol_resources:/opt/resources
    depends_on:
      - db

  nginx:
    image: sandoretti/ukun-nginx
    ports:
      - "80:80"
    depends_on:
      - ukun-clientes
      - ukun-empleados

volumes:
  db_data:
  vol_resources:
    driver: local
    driver_opts:
      o: bind
      type: none
      device: ./resources